apiVersion: templateset.keen.land/v1
kind: TemplateSet
metadata:
  name: multi-node-example
  labels:
    app: multi-node-example
spec:
  selector:
    matchLabels:
      app: multi-node-example
  template:
    metadata:
      name: "app-{{index .Node.Labels \"topology.kubernetes.io/zone\"}}"
      labels:
        app: multi-node-example
        zone: "{{index .Node.Labels \"topology.kubernetes.io/zone\"}}"
        hostname: "{{index .Node.Labels \"kubernetes.io/hostname\"}}"
        arch: "{{index .Node.Labels \"kubernetes.io/arch\"}}"
    spec:
      containers:
        - name: nginx
          image: "nginx:1.21"
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
          env:
            - name: NODE_NAME
              value: "{{.Node.Name}}"
            - name: NODE_ZONE
              value: "{{index .Node.Labels \"topology.kubernetes.io/zone\"}}"
            - name: NODE_REGION
              value: "{{index .Node.Labels \"topology.kubernetes.io/region\"}}"
            - name: NODE_HOSTNAME
              value: "{{index .Node.Labels \"kubernetes.io/hostname\"}}"
            - name: NODE_ARCH
              value: "{{index .Node.Labels \"kubernetes.io/arch\"}}"
            - name: NODE_OS
              value: "{{index .Node.Labels \"kubernetes.io/os\"}}"
            - name: INSTANCE_TYPE
              value: "{{index .Node.Labels \"node.kubernetes.io/instance-type\"}}"
            - name: POD_NAME
              value: "app-{{index .Node.Labels \"topology.kubernetes.io/zone\"}}"
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 200m
              memory: 256Mi
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/conf.d
              readOnly: true
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-config-{{index .Node.Labels \"topology.kubernetes.io/zone\"}}
            optional: true
      restartPolicy: Always
      tolerations:
        - operator: Exists
  servicePerPod:
    enabled: true